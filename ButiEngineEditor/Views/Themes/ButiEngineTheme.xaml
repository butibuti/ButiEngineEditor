<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:localThemes="clr-namespace:Xceed.Wpf.AvalonDock.Themes.Controls;assembly=Xceed.Wpf.AvalonDock.Themes.Aero"
    xmlns:shell="clr-namespace:Microsoft.Windows.Shell;assembly=Xceed.Wpf.AvalonDock"
    xmlns:avalonDock="clr-namespace:Xceed.Wpf.AvalonDock;assembly=Xceed.Wpf.AvalonDock"
    xmlns:avalonDockLayout="clr-namespace:Xceed.Wpf.AvalonDock.Layout;assembly=Xceed.Wpf.AvalonDock"
    xmlns:avalonDockControls="clr-namespace:Xceed.Wpf.AvalonDock.Controls;assembly=Xceed.Wpf.AvalonDock"
    xmlns:avalonDockConverters="clr-namespace:Xceed.Wpf.AvalonDock.Converters;assembly=Xceed.Wpf.AvalonDock"
    xmlns:avalonDockProperties="clr-namespace:Xceed.Wpf.AvalonDock.Properties;assembly=Xceed.Wpf.AvalonDock"
    >

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/Views/Themes/ButiEngineThemeBrush.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <avalonDockConverters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
    <avalonDockConverters:InverseBoolToVisibilityConverter x:Key="InverseBoolToVisibilityConverter"/>
    <avalonDockConverters:AnchorSideToOrientationConverter x:Key="AnchorSideToOrientationConverter"/>
    <avalonDockConverters:AnchorSideToAngleConverter x:Key="AnchorSideToAngleConverter"/>
    <avalonDockConverters:NullToDoNothingConverter x:Key="NullToDoNothingConverter"/>
    <avalonDockConverters:LayoutItemFromLayoutModelConverter x:Key="LayoutItemFromLayoutModelConverter"/>
    <avalonDockConverters:ActivateCommandLayoutItemFromLayoutModelConverter x:Key="ActivateCommandLayoutItemFromLayoutModelConverter"/>

    <Style x:Key="AvalonDock_ThemeMetro_ToolButtonStyle" TargetType="ToggleButton">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border BorderBrush="{TemplateBinding BorderBrush}"
                            Background="{TemplateBinding Background}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="AvalonDock_ThemeMetro_ButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border BorderBrush="{TemplateBinding BorderBrush}"
                            Background="{TemplateBinding Background}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{x:Type avalonDockControls:LayoutAnchorableFloatingWindowControl}" TargetType="{x:Type avalonDockControls:LayoutAnchorableFloatingWindowControl}">
        <Setter Property="Background" Value="{DynamicResource AvalonDock_ThemeMetro_WindowBackground}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource AvalonDock_ThemeMetro_BaseColor6}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="shell:WindowChrome.WindowChrome">
            <Setter.Value>
                <shell:WindowChrome
                    CornerRadius="0"
                    ResizeBorderThickness="10"
                    CaptionHeight="24"
                    GlassFrameThickness="0"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type avalonDockControls:LayoutAnchorableFloatingWindowControl}">
                    <Grid>
                        <Border x:Name="WindowBorder" 
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{DynamicResource AvalonDock_ThemeMetro_WindowBackground}"
                                BorderBrush="{TemplateBinding BorderBrush}">
                            <Grid >
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="24"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <Border
                                    x:Name="Header" 
                                    Padding="5,3,5,0"
                                    TextElement.Foreground="{DynamicResource AvalonDock_ThemeMetro_BaseColor2}"
                                    Background="{DynamicResource AvalonDock_ThemeMetro_BaseColor1}">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>

                                        <Border
                                            Visibility="{Binding Path=Model.IsSinglePane, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BoolToVisibilityConverter}}">
                                            <avalonDockControls:DropDownControlArea 
                                                DropDownContextMenu="{Binding Model.Root.Manager.AnchorableContextMenu, RelativeSource={RelativeSource TemplatedParent}}"
                                                DropDownContextMenuDataContext="{Binding Path=SingleContentLayoutItem, RelativeSource={RelativeSource TemplatedParent}}">
                                                <ContentPresenter
                                                      Content="{Binding Model.SinglePane.SelectedContent, RelativeSource={RelativeSource TemplatedParent}}" 
                                                      ContentTemplate="{Binding Model.Root.Manager.AnchorableTitleTemplate, RelativeSource={RelativeSource TemplatedParent}}"
                                                      ContentTemplateSelector="{Binding Model.Root.Manager.AnchorableTitleTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}"/>
                                            </avalonDockControls:DropDownControlArea>
                                        </Border>

                                        <avalonDockControls:DropDownButton
                                            x:Name="SinglePaneContextMenu"
                                            shell:WindowChrome.IsHitTestVisibleInChrome="True"
                                            Visibility="{Binding Path=Model.IsSinglePane, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BoolToVisibilityConverter}}"
                                            Style="{StaticResource AvalonDock_ThemeMetro_ToolButtonStyle}"
                                            Focusable="False"
                                            Grid.Column="1"
                                            VerticalAlignment="Center"
                                            HorizontalAlignment="Center"
                                            VerticalContentAlignment="Center"
                                            HorizontalContentAlignment="Center"
                                            DropDownContextMenu="{Binding Model.Root.Manager.AnchorableContextMenu, RelativeSource={RelativeSource TemplatedParent}}"
                                            DropDownContextMenuDataContext="{Binding Path=SingleContentLayoutItem, RelativeSource={RelativeSource TemplatedParent}}"
                                            ToolTip="{x:Static avalonDockProperties:Resources.Anchorable_CxMenu_Hint}">
                                            <Image x:Name="PART_ImgPinMenu" Stretch="None" Source="Images/PinMenu.png" Width="13"/>
                                        </avalonDockControls:DropDownButton>

                                        <Button 
                                            x:Name="PART_PinMaximize"
                                            shell:WindowChrome.IsHitTestVisibleInChrome="True"
                                            Focusable="False"
                                            Visibility="{Binding IsMaximized, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource InverseBoolToVisibilityConverter}}"
                                            Style="{StaticResource AvalonDock_ThemeMetro_ButtonStyle}"
                                            VerticalAlignment="Center"
                                            HorizontalAlignment="Center"
                                            VerticalContentAlignment="Center"
                                            HorizontalContentAlignment="Center"
                                            Command="{x:Static shell:SystemCommands.MaximizeWindowCommand}"
                                            CommandParameter="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                            ToolTip="{x:Static avalonDockProperties:Resources.Window_Maximize}"
                                            Grid.Column="2">
                                            <Image x:Name="PART_ImgPinMaximize" Source="Images/PinMaximize.png" Width="13"/>
                                        </Button>

                                        <Button 
                                            x:Name="PART_PinRestore"
                                            shell:WindowChrome.IsHitTestVisibleInChrome="True"
                                            Focusable="False"
                                            Visibility="{Binding IsMaximized, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BoolToVisibilityConverter}}"
                                            Style="{StaticResource AvalonDock_ThemeMetro_ButtonStyle}"
                                            VerticalAlignment="Center"
                                            HorizontalAlignment="Center"
                                            Command="{x:Static shell:SystemCommands.RestoreWindowCommand}"
                                            CommandParameter="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                            ToolTip="{x:Static avalonDockProperties:Resources.Window_Restore}"
                                            Grid.Column="2">
                                            <Image  x:Name="PART_ImgPinRestore" Source="Images/PinRestore.png" Width="13"/>
                                        </Button>

                                        <Button 
                                            x:Name="PART_PinClose"
                                            shell:WindowChrome.IsHitTestVisibleInChrome="True"
                                            Focusable="False"
                                            Style="{StaticResource AvalonDock_ThemeMetro_ButtonStyle}"
                                            VerticalAlignment="Center"
                                            HorizontalAlignment="Center"
                                            Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}"
                                            Command="{Binding CloseWindowCommand, RelativeSource={RelativeSource TemplatedParent}}"
                                            ToolTip="{x:Static avalonDockProperties:Resources.Anchorable_BtnClose_Hint}"
                                            Grid.Column="3">
                                            <Image x:Name="PART_ImgPinClose" Source="Images/PinClose.png" Width="13"/>
                                        </Button>
                                    </Grid>
                                </Border>

                                <!-- Content -->
                                <Border
                                    Grid.Row="1"
                                    Margin="5"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{DynamicResource AvalonDock_ThemeMetro_BaseColor7}"
                                    SnapsToDevicePixels="True">
                                    <ContentPresenter
                                        Content="{TemplateBinding Content}"/>
                                </Border>
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="WindowState" Value="Maximized">
                            <Setter Property="Padding" Value="3" TargetName="WindowBorder"/>
                        </Trigger>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Model.SinglePane.SelectedContent.IsActive}" Value="True">
                            <!--<Setter Property="Background" Value="{DynamicResource AvalonDock_ThemeMetro_BaseColor3}" TargetName="Header"/>-->
                            <!--<Setter Property="TextElement.Foreground" Value="{DynamicResource AvalonDock_ThemeMetro_BaseColor1}" TargetName="Header"/>-->

                            <Setter 
                                TargetName="WindowBorder"
                                Property="BorderBrush"
								Value="{DynamicResource AvalonDock_ThemeMetro_BaseColor3}" />
                            <Setter Property="Source" TargetName="PART_ImgPinClose" Value="Images/PinClose_Dark.png"/>
                            <Setter Property="Source" TargetName="PART_ImgPinRestore" Value="Images/PinRestore_Dark.png"/>
                            <Setter Property="Source" TargetName="PART_ImgPinMaximize" Value="Images/PinMaximize_Dark.png"/>
                            <Setter Property="Source" TargetName="PART_ImgPinMenu" Value="Images/PinMenu_Dark.png"/>
                        </DataTrigger>
                        <Trigger Property="IsMouseOver" SourceName="SinglePaneContextMenu" Value="True">
                            <Setter Property="Source" TargetName="PART_ImgPinMenu" Value="Images/PinMenu_Black.png"/>
                        </Trigger>
                        <Trigger Property="IsChecked" SourceName="SinglePaneContextMenu" Value="True">
                            <Setter Property="Source" TargetName="PART_ImgPinMenu" Value="Images/PinMenu_Black.png"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" SourceName="PART_PinMaximize" Value="True">
                            <Setter Property="Source" TargetName="PART_ImgPinMaximize" Value="Images/PinMaximize_Black.png"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" SourceName="PART_PinRestore" Value="True">
                            <Setter Property="Source" TargetName="PART_ImgPinRestore" Value="Images/PinRestore_Black.png"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" SourceName="PART_PinClose" Value="True">
                            <Setter Property="Source" TargetName="PART_ImgPinClose" Value="Images/PinClose_Black.png"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>